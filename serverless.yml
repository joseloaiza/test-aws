service: test-crud-aws

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  environment:
    HEROES_TABLE: ${self:custom.heroTableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.heroTableName}"
custom:
  heroTableName: heroes-${self:provider.stage}
plugins:
  - serverless-iam-roles-per-function
functions:
  getHero:
    handler: api.getHero
    name: get-hero
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: hero/{id}
          method: GET
  createHero:
    handler: api.createHero
    name: create-hero
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: hero
          method: POST
  # updateHero:
  #   handler: api.updateHero
  #   name: update-Hero
  #   memorySize: 128
  #   timeout: 5
  #   events:
  #     - http:
  #         path: Hero/{HeroId}
  #         method: PUT
  deleteHero:
    handler: api.deleteHero
    name: delete-hero
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: Hero/{HeroId}
          method: DELETE
  getAllHeroes:
    handler: api.getAllHero
    name: get-all-heroes
    memorySize: 128
    timeout: 5
    events:
      - http:
          path: Heros
          method: GET
resources:
  Resources:
    HerosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.heroTableName}
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
