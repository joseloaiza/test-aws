service: hero-crud-aws

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  environment:
    DYNAMO_TABLE_NAME: ${self:custom.heroTableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.heroTableName}"
custom:
  heroTableName: Heroes-Table${self:provider.stage}
plugins:
  - serverless-iam-roles-per-function
functions:
  getHero:
    handler: hero/get.getHero
    name: get-hero-v1
    memorySize: 128
    timeout: 20
    events:
      - http:
          path: hero/{id}
          method: GET
          cors: true
  createHero:
    handler: hero/create.createHero
    name: create-hero-v1
    memorySize: 128
    timeout: 20
    events:
      - http:
          path: hero/create
          method: POST
          cors: true
  # updateHero:
  #   handler: api.updateHero
  #   name: update-Hero
  #   memorySize: 128
  #   timeout: 5
  #   events:
  #     - http:
  #         path: Hero/{id}
  #         method: PUT
#   deleteHero:
#     handler: api.deleteHero
#     name: delete-hero
#     memorySize: 128
#     timeout: 5
#     events:
#       - http:
#           path: Hero/{id}
#           method: DELETE
#   getAllHeroes:
#     handler: api.getAllHeroes
#     name: get-all-heroes
#     memorySize: 128
#     timeout: 15
#     events:
#       - http:
#           path: Heros
#           method: GET
resources:
  Resources:
    HerosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.heroTableName}
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
